SimpleCrontrabEntry doctest file

    >>> from cron import *

    >>> c = SimpleCrontabEntry("* * * * *")

Checks for Entry format (only size)

    >>> c = SimpleCrontabEntry("* * * * *")
    >>> c = SimpleCrontabEntry("  *  *  *                   *  *")
    >>> c = SimpleCrontabEntry("* * * *")
    Traceback (most recent call last):
    ...
    ValueError: Crontab entry needs 5 fields
    >>> c = SimpleCrontabEntry("*   *    *        *")
    Traceback (most recent call last):
    ...
    ValueError: Crontab entry needs 5 fields
    >>> c = SimpleCrontabEntry("5-10    2  -2          5")
    Traceback (most recent call last):
    ...
    ValueError: Crontab entry needs 5 fields
    >>> c = SimpleCrontabEntry("*-*-*-*")
    Traceback (most recent call last):
    ...
    ValueError: Crontab entry needs 5 fields

Now check for entry validate (values inside ranges, etc.)

    >>> c = SimpleCrontabEntry("0 0 1 1 0")
    >>> c = SimpleCrontabEntry("-1 -4 -6 90 80")
    Traceback (most recent call last):
    ...
    ValueError: Bad Entry
    >>> c = SimpleCrontabEntry("0 0 0 0 0")
    Traceback (most recent call last):
    ...
    ValueError: Bad Entry
    >>> c = SimpleCrontabEntry("3/5 22 1 12 8")
    Traceback (most recent call last):
    ...
    ValueError: Bad Entry
    >>> c = SimpleCrontabEntry("1/4 * 20-11 1 1")
    Traceback (most recent call last):
    ...
    ValueError: Bad Entry
    >>> c = SimpleCrontabEntry("12/2 2 2 * *")
    Traceback (most recent call last):
    ...
    ValueError: Bad Entry
    
The next entry is valid ?

    >>> c = SimpleCrontabEntry("10-30/20 2 1 9 1")

Calculate next executions

    May 2007    
Mo Tu We Th Fr Sa Su
    1  2  3  4  5  6
 7  8  9 10 11 12 13
14 15 16 17 18 19 20
21 22 23 24 25 26 27
28 29 30 31

    >>> import datetime
    >>> now = datetime.datetime(2007, 05, 25, 10, 0)
    >>> now.weekday()
    4
    
    >>> c = SimpleCrontabEntry("*/15 * * * *")
    >>> c.next_run(now)
    datetime.datetime(2007, 5, 25, 10, 0)
    >>> c.prev_run(now)
    datetime.datetime(2007, 5, 25, 9, 45)
    
    >>> c.set_value("2 * * * *")
    >>> c.next_run(now)
    datetime.datetime(2007, 5, 25, 10, 2)
    >>> c.prev_run(now)
    datetime.datetime(2007, 5, 25, 9, 2)

    >>> c.set_value("1-30/15 * * * *")
    >>> c.next_run(now)
    datetime.datetime(2007, 5, 25, 10, 1)
    >>> c.prev_run(now)
    datetime.datetime(2007, 5, 25, 9, 16)

    >>> c.set_value("0 2,7 * * 1-5")
    >>> c.next_run(now)
    datetime.datetime(2007, 5, 28, 2, 0)
    >>> c.prev_run(now)
    datetime.datetime(2007, 5, 25, 7, 0)
    
    >>> c.set_value("9 2,9,22 */4 */3 *")
    >>> c.next_run(now)
    datetime.datetime(2007, 7, 1, 2, 9)
    >>> c.prev_run(now)
    datetime.datetime(2007, 4, 29, 22, 9)
    
    >>> c.set_value("5 12 9 5 *")
    >>> c.next_run(now)
    datetime.datetime(2008, 5, 9, 12, 5)
    >>> c.prev_run(now)
    datetime.datetime(2008, 5, 9, 12, 5)

Expiration measurement

    May 2007    
Mo Tu We Th Fr Sa Su
    1  2  3  4  5  6
 7  8  9 10 11 12 13
14 15 16 17 18 19 20
21 22 23 24 25 26 27
28 29 30 31

    >>> now = datetime.datetime(2007, 05, 25, 10, 0)
    >>> c.set_value("*/15 * * * *")
    >>> c.set_expiration(5)
    >>> c.next_run(now)
    datetime.datetime(2007, 5, 25, 10, 0)
    >>> c.prev_run(now)
    datetime.datetime(2007, 5, 25, 9, 45)
    >>> c.is_expired(now)
    False

    >>> c.set_value("0 9,12 * * *")
    >>> c.set_expiration(5)
    >>> c.next_run(now)
    datetime.datetime(2007, 5, 25, 12, 0)
    >>> c.prev_run(now)
    datetime.datetime(2007, 5, 25, 9, 0)
    >>> c.is_expired(now)
    True
    >>> c.set_expiration(60)
    >>> c.is_expired(now)
    False
